
// https://leetcode.com/problems/3sum-closest/
/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
// var threeSumClosest = function(nums, target) {
//     const SETS = []

//     const filteredNums = []
//     for (let i = 0; i < nums.length; ++i) {
//         let n = 0
//         for (let j = 0; j < filteredNums.length; ++j) {
//             if (filteredNums[j] === nums[i]) {
//                 ++n
//             }
//         }
//         if (n < 4) {
//             filteredNums.push(nums[i])
//         } else {
//             console.log(nums[i])
//         }
//     }

//     nums = filteredNums
//     const numsL = nums.length

//     for (let i = 0; i < numsL; ++i) {
//         for (let j = 0; j < numsL; ++j) {
//             for (let k = 0; k < numsL; ++k) {
//                 SETS.push([i, j , k])
//             }
//         }
//     }

//     const SETS1 = []
//     for (let i = 0; i < SETS.length; ++i) {
//         let isINDENT = false
//         const set = SETS[i]
//         for (let j = 0; j < set.length; ++j) {
//             for (let k = 0; k < set.length; ++k) {
//                 if (j !== k && set[j] === set[k]) {
//                     isINDENT = true
//                 }
//             }
//         }
//         if (!isINDENT) {
//             SETS1.push(set)
//         }
//     }

//     let diff = Infinity
//     let result = Infinity

//     for (let i = 0; i < SETS1.length; ++i) {
//         let summ = 0
//         for (let j = 0; j < SETS1[i].length; ++j) {
//             summ += nums[SETS1[i][j]]
//         }

//         if (summ === target) {
//             return summ
//         }

//         if (Math.abs(summ - target) < diff) {
//             diff = Math.abs(summ - target)
//             result = summ
//         }
//     }

//     return result    
// }

var threeSumClosest = function(nums, target) {

    nums = nums.sort((a, b) => a - b)

    let result = Infinity
    let diff = Infinity


    for (let i = 0; i < nums.length - 2; ++i) {
        let leftI = i + 1
        let rightI = nums.length - 1

        while (leftI < rightI) {
            const summ = nums[i] + nums[leftI] + nums[rightI]

            if (summ === target) {
                return summ
            }

            if (summ < target) {
                ++leftI
            } else {
                --rightI
            }

            if (Math.abs(summ - target) < diff) {
                diff = Math.abs(summ - target)
                result = summ
            }
        }
    }

    return result
}

const arr = [-31,684,-416,948,231,-602,696,-12,219,176,207,-455,-50,827,659,292,-182,-879,-939,881,919,-908,346,825,-957,-793,527,-156,-582,148,-176,398,-22,-508,-5,2,517,133,939,-526,-621,-129,963,321,-105,-559,-405,871,465,-248,-123,979,758,432,309,498,387,627,538,-357,701,-110,717,-846,-112,58,210,-799,-520,-681,-852,-732,543,829,-492,-755,-820,-994,775,575,-752,-631,-771,-400,107,45,-545,10,8,497,901,-725,-164,850,713,832,227,-487,79,-798,-614,600,-974,930,56,643,709,221,-854,-633,-578,518,501,-71,-650,-429,-891,261,168,-404,-421,-863,268,-457,-87,251,888,115,-132,-512,903,-484,624,22,-440,-629,404,-594,-306,-388,67,-515,394,814,-219,687,236,539,330,-848,-307,-55,-469,-535,-734,357,-56,-649,-585,-75,-403,-32,706,-65,-268,62,831,-956,-27,-69,-651,-72,642,-680,617,-903,-475,-89,-197,279,-444,712,244,54,874,-291,-805,-824,-676,114,933,283,197,733,594,-710,-143,522,724,-423,688,914,-729,-661,651,345,-181,658,-684,-281,-698,910,-30,277,-99,605,836,-894,-109,-781,-947,-49,602,848,-784,469,156,-900,-632,572,204,-294,11,-200,-385,817,294,-210,141,95,-965,-369,794,637,-735,-347,510,762,-377,513,-504,-165,-477,-178,32,55,-948,-595,-64,-170,-576,776,-901,-518,-537,-215,-351,-458,834,-15,-376,-381,-160,142,408,-275,-987,533,-498,-1000,72,-810,-689,639,-816,791,920,-344,215,-934,-880,-935,655,-577,-616,-823,212,714,-499,489,567,647,324,468,-797,-61,646,-572,-392,482,-240,450,154,681,-301,-839,-607,-895,-245,-704,-929,60,895,116,-638,-90,562,75,665,945,768,678,137,-636,436,-282,17,657,882,740,-94,-536,-748,-870,-261,461,335,223,-137,139,420,356,102,-809,-172,803,-39,-862,399,666,540,-187,-151,579,694,82,386,570,-583,-113,636,-973,635,830,996,-843,746,-482,929,840,-471,363,14,936,34,-926,-25,276,103,206,-163,679,-731,-470,789,203,-700,-340,-643,490,-476,245,-510,-452,160,-806,629,-221,118,-365,-243,287,926,-467,-428,977,-909,788,-804,634,-652,-570,609,26,-587,-322,-737,935,-717,456,-615,991,135,-410,-157,660,778,641,971,-822,-104,-493,-238,350,-726,-768,-540,-773,670,550,406,-889,-703,879,-765,-318,847,7,-141,-610,950,-750,44,119,189,341,-292,-620,462,438,153,921,-82,723,-514,-288,-252,-530,-641,339,-795,-675,-702,-865,246,94,-549,205,-154,-529,620,-468,21,854,-485,-233,-657,-300,-173,-162]
const target = -4546

console.log('result', threeSumClosest(arr, target))

